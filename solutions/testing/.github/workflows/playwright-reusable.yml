name: Playwright Reusable

on:
  workflow_call:
    inputs:
      test-type:
        required: true
        description: 'The Playwright test suite to run. integration or e2e'
        type: string
      timeout-minutes:
        required: false
        default: 30
        description: 'The timeout for the job'
        type: number

env:
  FORCE_COLOR: 3

jobs:
  run:
    # Empty whitespace character to make the PR checks UI a little easier to read.
    name: â€Ž
    timeout-minutes: ${{ inputs.timeout-minutes }}
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.25.2-focal
      # Prevents the image from getting into permission denied errors
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.14

      # The pnpm version to use is the one in `packageManager` in the package.json
      - name: Set up pnpm
        uses: pnpm/action-setup@v2

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup node_modules
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        shell: bash
        run: pnpm install --frozen-lockfile
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: '1'

      - name: Run ${{ inputs.test-type }} tests
        run: pnpm run ${{ inputs.test-type }}
        env:
          BASE_URL: ${{ github.event_name == 'deployment_status' && github.event.deployment_status.target_url || 'https://solutions-testing.vercel.app' }}

      - name: Upload test results to GitHub
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: playwright-${{ inputs.test-type }}-report
          path: packages/playwright/test-results
